stages:
  - build
  - test

variables:
  IDF_PATH: "$CI_PROJECT_DIR/esp-idf"
  BATCH_BUILD: "1"
  V: "0"
  GIT_SUBMODULE_STRATEGY: "recursive"
  MAKEFLAGS: "-j5 --no-keep-going"

before_script:
    - export PATH=${PATH}:/esppool
    # add gitlab ssh key
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GITLAB_KEY > ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

after_script:
    - esppool -r all

.setup_idf: &setup_idf
  # Cloning esp-idf
  - echo Cloning esp-idf - Started
  - git clone --recursive --branch release/v4.3 --depth 1 https://github.com/espressif/esp-idf.git
  - pushd esp-idf
  - echo Cloning esp-idf - Done
  # Running install.sh
  - echo Running install.sh - Started
  - ./install.sh
  - echo Running install.sh - Done
  # Running export.sh
  - echo Running export.sh - Started
  - . export.sh
  - echo Running export.sh - Done
  # Applying patch for v4.3
  - git apply -v $CI_PROJECT_DIR/idf-patches/privilege-separation_support_v4.3.patch
  - popd

build_examples:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-ci-env:priv-sep
  tags:
    - build

  artifacts:
    paths:
      - ${CI_PIPELINE_ID}.tar.gz
    expire_in: 2 days
    when: always

  script:
    - *setup_idf
    # Build blink
    - pushd $CI_PROJECT_DIR/examples/blink
    - idf.py build
    - popd
    # Build http_request
    - pushd $CI_PROJECT_DIR/examples/http_request
    - idf.py build
    - popd
    # Build https_request
    - pushd $CI_PROJECT_DIR/examples/https_request
    - idf.py build
    - popd

build_tests:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-ci-env:priv-sep
  tags:
    - build

  artifacts:
    paths:
     - ${CI_PIPELINE_ID}.tar.gz
    expire_in: 2 days
    when: always

  script:
    - *setup_idf
    # Build violation_test
    - pushd $CI_PROJECT_DIR/tests/violation_test
    - idf.py build
    - tar -czvf ${CI_PIPELINE_ID}.tar.gz build/bootloader/bootloader.bin build/partition_table/partition-table.bin build/violation_test.bin build/user_app/user_app.bin
    - mv ${CI_PIPELINE_ID}.tar.gz $CI_PROJECT_DIR/
    - popd

build_docs:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-ci-env:priv-sep
  tags:
    - build

  script:
    - python --version
    - python -m pip install -r docs/requirements.txt
    - pushd docs
    - build-docs -t esp32c3 -l en
    - popd

run_tests:
  stage: test
  image: $CI_DOCKER_REGISTRY/esp32-ci-env:priv-sep
  tags:
    - test
  script:
    - tar -xzf ${CI_PIPELINE_ID}.tar.gz
    - python3 -u $CI_PROJECT_DIR/tests/ci_test.py --chip esp32c3 --build $CI_PROJECT_DIR/build
