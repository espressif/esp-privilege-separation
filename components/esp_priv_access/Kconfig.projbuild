menu "Privilege separation"

    menu "Memory allocation"

    config PA_ALLOCATE_USER_IRAM_SIZE
        hex "Allocate IRAM space for user application"
        range 0 0x10000
        default 0x800
        help
            Allocate IRAM for user space application. This size will reflect in the user_app as well.
            This is the size of IRAM that would be dedicated for user space code.

    choice PA_MEMORY_ALLOCATION_POLICY
        prompt "Memory allocation policy"
        default PA_MEMORY_ALLOCATE_USER
        help
            Choose the DRAM memory allocation policy.
            Either allocate DRAM memory for protected app or for user app. The size configured by PA_ALLOCATE_DRAM_SIZE will be
            allocated to the chosen execution environment and the remaining DRAM memory will be allocated
            to the other execution environment.

        config PA_MEMORY_ALLOCATE_PROTECTED
            bool "Allocate to protected app"

        config PA_MEMORY_ALLOCATE_USER
            bool "Allocate to user app"
    endchoice

    config PA_ALLOCATE_DRAM_SIZE
        hex "Allocate DRAM space for chosen execution environment"
        range 0 0x40000
        default 0x19000
        help
            Allocate DRAM for the chosen execution environment (i.e protected or user)

            This DRAM size is for data, bss and heap memory combined.
    endmenu

    choice PA_VIOLATION_POLICY
        prompt "User app violation policy"
        default PA_REBOOT_ENTIRE_SYSTEM
        help
            Policy for handling permission violation of user task. In case any user task violates
            its permission, handle the exception as per the policy selected

        config PA_DELETE_VIOLATING_TASK
            bool "Delete only the violating user task"
        config PA_RESTART_USER_APP
            bool "Restart user app (EXPERIMENTAL)"
            help
                When enabled, restart the user app without restarting the protected app.
                When exception occurs in user space, the panic handler will delete
                all the user space tasks and reboot user app

                Note: This is still in experimental stage and there are few things that need to be addressed.
                      One being heap cleanup and another being peripheral resources cleanup
        config PA_REBOOT_ENTIRE_SYSTEM
            bool "Reboot entire system (protected + user)"
    endchoice

    config PA_PROTECTED_TASK_WDT_PANIC
        bool "Panic on task watchdog timeout in protected space"
        depends on ESP_TASK_WDT && !ESP_TASK_WDT_PANIC
        default n
        help
            Invoke panic handler when task watchdog timeout occurs in any protected space task.
            The entire system (protected + user) would be restarted

    config PA_USER_TASK_WDT_PANIC
        bool "Panic on task watchdog timeout in user space"
        depends on ESP_TASK_WDT && !ESP_TASK_WDT_PANIC
        default y
        help
            Invoke panic handler when task watchdog timeout occurs in any user space task.
            The panic behavior will be as per the violation policy set above

    config PA_BACKTRACE_INFO
        bool "Print violating task backtrace info"
        default y
        help
            If enabled, registers and stack dump of the violating user task will be printed on the console
            This information can be further used by host utility (e.g idf_monitor) to generate a backtrace

    config PA_CONSOLE_ENABLE
        bool "Enable serial console"
        default y
        help
            Enable serial debug console.

    config PA_KERNEL_STACK_SIZE
        int "Kernel stack size"
        range 2560 20480
        default 2560
        help
            Set the kernel stack size.
            Each user space task has its own kernel stack. Kernel stack is used while processing system calls.

    config PA_USER_MAIN_TASK_STACK_SIZE
        int "User main task stack size"
        default 3584
        help
            Set the user main task stack size.
            This is stack of the task that calls user_main().

    config PA_USER_DISPATCHER_TASK_STACK_SIZE
        int "User dispatcher task stack size"
        default 2048
        help
            Set the user dispatcher task stack size.
            All the user registered ISRs and event handlers will be executed from this task's context

endmenu
